(function(b, a) {
	b.fn.emailCycle = function(f) {
		var d = b(this);
		var c = f || {};
		var e = {
			url : "",
			afterRender : function() {
			},
			maxCols : 5,
			autoCalcMaxCols : false,
			params : {},
			cycleNodeRender : function(m, j) {
				var h = j.color || Raphael.getColor();
				var i = m.ellipse(0, 0, 40, 20).attr({
					fill : h,
					stroke : h,
					"stroke-width" : 2,
					cursor : "move"
				});
				i.node.id = j.id || j.label;
				var l = m.text(0, 30, j.label || j.id).attr({
					"font-weight" : "bold",
					"font-size" : "11px"
				});
				if (j.href) {
					l.attr("href", j.href)
				}
				if (j.target) {
					l.attr("target", j.target)
				}
				var k = m.text(0, 0, j.date).attr({
					opacity : 0,
					cursor : "move"
				});
				var g = m.set().push(i).push(l).push(k);
				k.hover(function() {
					k.animate({
						opacity : 1,
						"fill-opacity" : 1
					}, 500)
				}, function() {
					k.animate({
						opacity : 0,
						"fill-opacity" : 0
					}, 1000)
				});
				return g
			},
			width : (d.width()),
			height : d.height(),
			cycleRender : function(k, p) {
				d.empty();
				var m = d[0].configure;
				var t = new Graph();
				if (!m.data || m.data.length == 0) {
					m.data = k || []
				}
				var s = 0;
				var r = k;
				var h = p || {
					needTranslate : true,
					layout : "SHORT"
				};
				if (h.needTranslate) {
					r = m.dataTranslate(k)
				}
				var q = r.length;
				for (; s < q; s++) {
					var l = r[s];
					if (l.shape) {
						delete l.shape
					}
					l.render = m.cycleNodeRender;
					t.addNode(l.id, l)
				}
				var o = "";
				if (h.layout == "DETAILED") {
					m.layout = "DETAILED";
					o = new Graph.Layout.Customized(t, m.maxCols);
					o.layoutCalcShips(r)
				} else {
					m.layout = "SHORT";
					o = new Graph.Layout.SSC(t)
				}
				d.css("height", o.absoulteSize().height);
				var n = new Graph.Renderer.Raphael(d.attr("id"), t, d.width(),
						d.height());
				n.draw();
				b(window).unbind("resize").resize(function() {
					if (o.absoulteSize().width < d.width()) {
						n.resize(d.width(), d.height());
						n.draw()
					}
				})
			},
			dataTranslate : function(n) {
				var h = Graph.Layout.SSC.categoryMap();
				for ( var k in n) {
					var m = n[k];
					var j = "";
					if (m.code.startsWith("US1")) {
						j = "SYS_INIT_SEND"
					} else {
						if (m.code.startsWith("US2")) {
							j = "CUST_REPLY"
						} else {
							if (m.code.startsWith("US3")) {
								j = "SYS_RETRY_SEND"
							} else {
								if (m.code.startsWith("US4")) {
									j = "SYS_CONFIRM"
								} else {
									if (m.code.startsWith("UR1")) {
										j = "SYS_REMINDER_CUST"
									} else {
										if (m.code.startsWith("UR2")) {
											j = "SYS_INTERNAL_SEND"
										} else {
											if (m.code.startsWith("UR3")) {
												j = "INTERNAL_REPLY"
											} else {
												if (m.code.startsWith("UE1")) {
													j = "SYS_TRYOUT_SEND"
												}
											}
										}
									}
								}
							}
						}
					}
					if (h[j] && h[j].push) {
						m.buz = j;
						h[j].push(m)
					}
				}
				var l = [];
				for ( var j in h) {
					var g = h[j].pop();
					if (g && g.buz && g.buz == j) {
						l.push(g)
					}
				}
				return l
			}
		};
		b.extend(true, e, c);
		d[0].configure = e;
		if (e.data) {
			e.cycleRender(e.data);
			e.afterRender()
		} else {
			if (e.url !== "") {
				b.get(e.url, e.params, function(g) {
					e.cycleRender(g);
					e.afterRender()
				}, "json")
			}
		}
	};
	b.fn.emailCycleSetting = function(d, f) {
		var c = b(this)[0].configure;
		var e = {};
		switch (d) {
		case "redraw":
			e = f || {
				needTranslate : true,
				layout : "SHORT"
			};
			c.cycleRender(c.data, e);
			break;
		default:
			break
		}
	}
})(jQuery || apex.jQuery, {});